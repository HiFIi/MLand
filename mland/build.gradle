apply plugin: 'com.android.application'

def buildDateTime = project.hasProperty('devBuild') ? 100 : new
        Date().format('yyMMddHHmm').toInteger()

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.kyler.mland.egg"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode buildDateTime
        versionName "2.0.0-wip"
        multiDexEnabled true
        flavorDimensions "target", "abi"

        lintOptions {
            abortOnError false
            htmlReport true
            xmlReport true
            checkReleaseBuilds false
            disable 'InvalidPackage'
        }

        productFlavors {
            regular {
                dimension "target"
                versionCode = 1
            }

            ARMv7 {
                dimension "abi"
                versionCode = 2
            }
            ARMv8 {
                dimension "abi"
                versionCode = 3
            }
        }

        //Split into platform dependent APK
        splits {
            abi {
                enable false // for now
                reset()
                // include 'armeabi', 'armeabi-v7a', 'arm64-v8a'
                include 'arm64-v8a'
                //select ABIs to build APKs for
                universalApk false //generate an additional APK that contains all the ABIs
            }
        }

        // map for the version code
        project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3]

        // Rename with proper versioning
        android.applicationVariants.all { variant ->
            // assign different version code for each output
            variant.outputs.each { output ->
                output.versionCodeOverride =
                        project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) *
                                1000000 +
                                android.defaultConfig.versionCode
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        maxProcessCount 8
        jumboMode = true
        preDexLibraries true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        buildTypes {
            debug {
                applicationIdSuffix ".debug"
                minifyEnabled true
                shrinkResources true
                zipAlignEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
    productFlavors {
        ARMv8 {
            minSdkVersion 24
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support:cardview-v7:+'
    implementation 'com.android.support:design:+'
    testImplementation 'junit:junit:+'
    implementation 'com.android.support:support-v4:+'
    implementation 'com.android.support:multidex:+'
    implementation 'com.android.support:percent:+'
}
